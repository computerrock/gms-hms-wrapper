plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'maven-publish'
}

apply from: '../scripts/productFlavor.gradle'

android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    publishNonDefault true
    flavorDimensions "services"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

publishing {
    repositories {
        maven {
            name = "GithubPackages"
            url = uri("https://maven.pkg.github.com/computerrock/gms-hms-wrapper")
            credentials {
                username = properties.getProperty("GITHUB_USER")
                password = properties.getProperty("GITHUB_PERSONAL_ACCESS_TOKEN")
            }
        }
        maven {
            name = 'MyRepo'
            url = "file://${buildDir}/repo"
        }
    }

    publications {
        basementGMS(MavenPublication) {
            groupId "com.computerrock"
            artifactId "vision-gms"
            version "1.0.0"
            artifact("$buildDir/outputs/aar/vision-gms-release.aar")

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.api.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
        basementHMS(MavenPublication) {
            groupId "com.computerrock"
            artifactId "vision-hms"
            version "1.0.0"
            artifact("$buildDir/outputs/aar/vision-hms-release.aar")

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')
                //Iterate over the compile dependencies (we don't want the test ones), adding a <dependency> node for each
                configurations.api.allDependencies.each {
                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', it.group)
                    dependencyNode.appendNode('artifactId', it.name)
                    dependencyNode.appendNode('version', it.version)
                }
            }
        }
    }
}

dependencies {

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    testImplementation 'junit:junit:4.13.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    hmsImplementation 'com.huawei.hms:ml-computer-vision-cloud:2.0.3.300'
    hmsImplementation 'com.huawei.hms:scan:1.2.3.300'
    gmsImplementation "com.google.android.gms:play-services-vision:20.1.3"
}